name: Terraform Plan and Apply

on:
  workflow_call:
    inputs:
      working-dir:
        required: true
        type: string
      terraform-version:
        required: false
        type: string
        default: "1.4.5"
      backend-storage-name:
        required: true
        type: string
      backend-container-name:
        required: true
        type: string
      backend-state-key:
        required: true
        type: string
      environment:
        required: false
        type: string
    secrets:
      storage-access-key:
        required: true
      azure-client-id:
        required: true
      azure-client-secret:
        required: true
      azure-subscription-id:
        required: true
      azure-tenant-id:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Checkout devops tf modules
      uses: actions/checkout@v2
      with:
        repository: using-system/devops
        ref: master
        path: devopsrepo
        
    - name: Copy devops tf modules
      run: cp -R $GITHUB_WORKSPACE/devopsrepo/terraform/modules/* modules/
      working-directory: ${{ inputs.working-dir }}
      
    - name: Install Az CLI
      uses: azure/cli@v1
      with:
        inlineScript: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo

    - name: Azure Login
      uses: azure/login@v1
      with:
        client-id: '${{ secrets.AZURE_CLIENT_ID }}'
        tenant-id: '${{ secrets.AZURE_TENANT_ID }}'
        subscription-id: '${{ secrets.AZURE_SUBSCRIPTION_ID }}'

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version:  ${{ inputs.terraform-version }}   

    - name: Terraform Init
      run: terraform init -backend-config="storage_account_name=${{ inputs.backend-storage-name }}" -backend-config="container_name=${{ inputs.backend-container-name }}" -backend-config="key=${{ inputs.backend-state-key }}"
      working-directory: ${{ inputs.working-dir }}

    - name: Download tfplan artifact
      uses: actions/download-artifact@v2
      with:
        name: ${{ inputs.tfplan-artifact }}
        path: ${{ inputs.working-dir }}

    - name: Terraform Apply
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      run: terraform apply 'tfplan/tfplan'
      working-directory: ${{ inputs.working-dir }}