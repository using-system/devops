name: Terraform Plan and Apply

on:
  workflow_call:
    inputs:
      working-dir:
        required: true
        type: string
      terraform-version:
        required: false
        type: string
        default: "1.4.5"
      backend-storage-name:
        required: true
        type: string
      backend-container-name:
        required: true
        type: string
      backend-state-key:
        required: true
        type: string
      environment:
        required: false
        type: string
    secrets:
      storage-access-key:
        required: true
      azure-client-id:
        required: true
      azure-client-secret:
        required: true
      azure-subscription-id:
        required: true
      azure-tenant-id:
        required: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Checkout devops tf modules
        uses: actions/checkout@v2
        with:
          repository: using-system/devops
          ref: master
          path: devopsrepo

      - name: Copy devops tf modules
        run: cp -R $GITHUB_WORKSPACE/devopsrepo/terraform/modules/* modules/
        working-directory: ${{ inputs.working-dir }}

      - name: Azure Login
        run: |
          az login --service-principal -u ${{ secrets.azure-client-id }} -p ${{ secrets.azure-client-secret }} --tenant ${{ secrets.azure-tenant-id }}
          az account set --subscription="${{ secrets.azure-subscription-id }}"

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ inputs.terraform-version }}
        env:
          ARM_CLIENT_ID: ${{ secrets.azure-client-id  }}
          ARM_CLIENT_SECRET: ${{ secrets.azure-client-secret }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.azure-subscription-id }}
          ARM_TENANT_ID: ${{ secrets.azure-tenant-id }}

      - name: Terraform Init
        run: terraform init -backend-config="access_key=${{ secrets.storage-access-key }}" -backend-config="storage_account_name=${{ inputs.backend-storage-name }}" -backend-config="container_name=${{ inputs.backend-container-name }}" -backend-config="key=${{ inputs.backend-state-key }}"
        working-directory: ${{ inputs.working-dir }}

      - name: Download tfplan artifact
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.tfplan-artifact }}
          path: ${{ inputs.working-dir }}

      - name: Terraform Apply
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: terraform apply 'tfplan/tfplan'
        working-directory: ${{ inputs.working-dir }}
