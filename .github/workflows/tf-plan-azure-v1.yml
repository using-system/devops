name: Terraform Plan and Apply

on:
  workflow_call:
    inputs:
      working-dir:
        required: true
        type: string
      terraform-version:
        required: false
        type: string
        default: "1.4.5"
      backend-storage-name:
        required: true
        type: string
      backend-container-name:
        required: true
        type: string
      backend-state-key:
        required: true
        type: string
      variables-file:
        required: true
        type: string
    secrets:
      storage-access-key:
        required: true
      azure-client-id:
        required: true
      azure-client-secret:
        required: true
      azure-subscription-id:
        required: true
      azure-tenant-id:
        required: true
    outputs:
      changes:
        description: "Determines if there is any changes on the plan"
        value: ${{ jobs.terraform.outputs.changes }}

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Checkout devops tf modules
      uses: actions/checkout@v2
      with:
        repository: using-system/devops
        ref: master
        path: devopsrepo
        
    - name: Copy devops tf modules
      run: cp -R $GITHUB_WORKSPACE/devopsrepo/terraform/modules/* modules/
      working-directory: ${{ inputs.working-dir }}

    - name: Azure Login
      run: |
        az login --service-principal -u ${{ secrets.azure-client-id }} -p ${{ secrets.azure-client-secret }} --tenant ${{ secrets.azure-tenant-id }}
        az account set --subscription="${{ secrets.azure-subscription-id }}"

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version:  ${{ inputs.terraform-version }}
        terraform_wrapper: false
      env:
        ARM_CLIENT_ID: ${{ secrets.azure-client-id  }}
        ARM_CLIENT_SECRET: ${{ secrets.azure-client-secret }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.azure-subscription-id }}
        ARM_TENANT_ID: ${{ secrets.azure-tenant-id }}

    - name: Terraform Init
      run: terraform init -backend-config="access_key=${{ secrets.storage-access-key }}" -backend-config="storage_account_name=${{ inputs.backend-storage-name }}" -backend-config="container_name=${{ inputs.backend-container-name }}" -backend-config="key=${{ inputs.backend-state-key }}"
      working-directory: ${{ inputs.working-dir }}

    - name: Install TerraScan
      run: |
        curl -L "$(curl -s https://api.github.com/repos/tenable/terrascan/releases/latest | grep -o -E "https://.+?_Linux_x86_64.tar.gz")" > terrascan.tar.gz
        tar -xf terrascan.tar.gz terrascan && rm terrascan.tar.gz
        install terrascan /usr/local/bin && rm terrascan
        chmod +x /usr/local/bin/terrascan

    - name: Run TerraScan
      run: |
        terrascan scan --iac-type terraform -t azure -v v14 -d ${{ inputs.working-dir }} --no-recursive
      continue-on-error: true

    - name: Terraform Plan
      id: get_plan
      run: |
        set +e
        terraform plan -out=tfplan -var-file='${{ inputs.variables-file }}' -detailed-exitcode -no-color
        exit_code=$?
        printf "terraform_exit_code=$exit_code"
        if [ "$exit_code" -eq "0" ]; then
          echo "changes=false" >> "$GITHUB_OUTPUT"
          exit 0
        elif [ "$exit_code" -eq "2" ]; then
          echo "changes=true" >> "$GITHUB_OUTPUT"
          exit 0
        else
          exit 1
        fi
      working-directory: ${{ inputs.working-dir }}

    - name: Upload tfplan as artifact
      uses: actions/upload-artifact@v2
      with:
        name: tfplan
        path: ${{ inputs.working-dir }}/tfplan
    outputs:
      changes: ${{ steps.get_plan.outputs.changes }}